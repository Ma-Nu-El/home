#!/usr/bin/env bash

# A script to copy the content of a file or text to the clipboard.
# Compatible with both Linux (using xclip) and macOS (using pbcopy).
#
# https://askubuntu.com/questions/210413/what-is-the-command-line-equivalent-of-copying-a-file-to-clipboard

set -o pipefail

# Function to display usage information
usage() {
    cat <<EOF
Usage: copy_to_clipboard [options] [file|text]
Options:
  -h, --help, -?     Show this help message
Examples:
  copy_to_clipboard <FILE>          Copy the contents of a file to the clipboard
  copy_to_clipboard                  Clear the clipboard
  echo "TEXT" | copy_to_clipboard    Copy text from standard input to the clipboard
EOF
}

# Check if the help flag is provided
if [[ $1 == '-h' || $1 == '--help' || $1 == '-?' ]]; then
    usage
    exit 0
fi

# Function to handle clipboard operations on Linux
linux_case() {
    if [[ -p /dev/stdin ]]; then                 # Check if there's piped input
        cat | xclip -i -selection clipboard
    elif [[ -f $1 ]]; then                       # Copy file content to clipboard
        xclip -i -selection clipboard < "$1"
    elif [[ -z $1 ]]; then                       # Clear clipboard
        echo -n "" | xclip -i -selection clipboard
    else                                         # Copy text to clipboard
        echo -n "$1" | xclip -i -selection clipboard
    fi
}

# Function to handle clipboard operations on macOS (Darwin)
darwin_case() {
    if [[ -p /dev/stdin ]]; then                 # Check if there's piped input
        cat | pbcopy
    elif [[ -f $1 ]]; then                       # Copy file content to clipboard
        pbcopy < "$1"
    elif [[ -z $1 ]]; then                       # Clear clipboard
        echo -n "" | pbcopy
    else                                         # Copy text to clipboard
        echo -n "$1" | pbcopy
    fi
}

# Detect operating system and execute appropriate function
os=$("$HOME"/bin/detect_os)

case $os in
    linux)
        linux_case "$@" ;;
    darwin)
        darwin_case "$@" ;;
    *)
        echo "Unsupported OS: $os"
        exit 1 ;;
esac
