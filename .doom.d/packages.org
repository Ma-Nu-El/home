#+TITLE: Packages
#+FILETAGS: :literate:config:
#+PROPERTY: header-args :tangle ~/.doom.d/packages.el :results silent


* Table of Contents :TOC_2:noexport:
- [[#shebang][shebang]]
- [[#readme][readme]]
- [[#org-transclusion][org-transclusion]]
- [[#org-sidebar][org-sidebar]]
- [[#org-contrib][org-contrib]]
- [[#org-depend][org-depend]]

* shebang
:PROPERTIES:
:ID:       068b3d1a-7e2a-46e9-ae33-90f018d320bc
:END:

#+begin_src elisp
;; -*- no-byte-compile: t; -*-
#+end_src

* readme

;;; $DOOMDIR/packages.el
;; To install a package with Doom you must declare them here and run 'doom sync'
;; on the command line, then restart Emacs for the changes to take effect -- or
;; use 'M-x doom/reload'.


;; To install SOME-PACKAGE from MELPA, ELPA or emacsmirror:
                                        ;(package! some-package)

;; To install a package directly from a remote git repo, you must specify a
;; `:recipe'. You'll find documentation on what `:recipe' accepts here:
;; https://github.com/raxod502/straight.el#the-recipe-format
                                        ;(package! another-package
                                        ;  :recipe (:host github :repo "username/repo"))

;; If the package you are trying to install does not contain a PACKAGENAME.el
;; file, or is located in a subdirectory of the repo, you'll need to specify
;; `:files' in the `:recipe':
                                        ;(package! this-package
                                        ;  :recipe (:host github :repo "username/repo"
                                        ;           :files ("some-file.el" "src/lisp/*.el")))

;; If you'd like to disable a package included with Doom, you can do so here
;; with the `:disable' property:
                                        ;(package! builtin-package :disable t)

;; You can override the recipe of a built in package without having to specify
;; all the properties for `:recipe'. These will inherit the rest of its recipe
;; from Doom or MELPA/ELPA/Emacsmirror:
                                        ;(package! builtin-package :recipe (:nonrecursive t))
                                        ;(package! builtin-package-2 :recipe (:repo "myfork/package"))

;; Specify a `:branch' to install a package from a particular branch or tag.
;; This is required for some packages whose default branch isn't 'master' (which
;; our package manager can't deal with; see raxod502/straight.el#279)
                                        ;(package! builtin-package :recipe (:branch "develop"))

;; Use `:pin' to specify a particular commit to install.
                                        ;(package! builtin-package :pin "1a2b3c4d5e")


;; Doom's packages are pinned to a specific commit and updated from release to
;; release. The `unpin!' macro allows you to unpin single packages...
                                        ;(unpin! pinned-package)
;; ...or multiple packages
                                        ;(unpin! pinned-package another-pinned-package)
;; ...Or *all* packages (NOT RECOMMENDED; will likely break things)
                                        ;(unpin! t)




* org-transclusion
:PROPERTIES:
:ID:       9fad3042-79dd-4315-ae0a-96777e74e714
:END:
#+begin_src elisp
(package! org-transclusion
  :recipe (:host github
           :repo "nobiot/org-transclusion"
           :branch "main"
           :files ("*.el")
           )
  )
#+end_src
* org-sidebar
:PROPERTIES:
:ID:       c8eb829b-a1c2-4ef3-a1b2-a2f1e7cc5899
:END:
- https://github.com/alphapapa/org-sidebar


~#+begin_src elisp
(package! org-sidebar
  :recipe (:host github
           :repo "alphapapa/org-sidebar"
           :branch "master"
           )
  )
~#+end_src

I tried it, but it was not intuitive enough.
The only useful feature is ~org-sidebar~, but that
can be achieved using a buffer restriction
of ~org-agenda~ anyway.

And as for the ~org-sidebar-tree~ feature,
Doom already has ~treemacs~ and it does a better
job --- more intuitive, DWIM vibe.

Still, good promise. But not for me right now.


* org-contrib
- [2021-09-30 Thu 17:22]
- Tried to update Doom and during cloning of org-contrib install crashed.


This seemed to do the work.

,#+begin_src elisp
(package! org-contrib
  :recipe (:host github
           :repo "emacsmirror/org-contrib")
  )
,#+end_src

,#+begin_src elisp
(package! org-contrib)
,#+end_src

* org-depend
- [2021-12-28 Tue 16:45]


,#+begin_src elisp
(package! org-depend)
,#+end_src

Contained in [[https://github.com/emacsmirror/org-contrib][org-contrib]].
