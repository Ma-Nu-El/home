#!/usr/bin/env bash
set -o pipefail

manuclone(){
	if [[ -z "$1"  ]]
	then
		echo "example: 'manuclone foo bar' is the same as"
		echo "'git clone git@github.com:Ma-Nu-El/foo bar'"
	else
	git clone git@github.com:Ma-Nu-El/"$1"
	fi
}
# cd and git status into directory
cd-and-git-status(){
if [ -d "$1" ] # if argument is a directory
then
	cd "$1" || exit
	clear && pwd && echo "-----" && git status
else
	if [ -z "$1" ]
	then
		clear && pwd && git status
	fi
fi
}
# cd and ls
ue(){
cd "$1" && clear && pwd && echo '-----' && ls
}
# quick jumps to $MY_DRIVE
drive(){
if [[ "$1" ]]
then
    cd "$MY_DRIVE"/"$1" || return
    pwd
fi

if [[ -z "$1" ]]
then
    cd "$MY_DRIVE" || return
    pwd
fi
}

# https://unix.stackexchange.com/questions/6435/how-to-check-if-pwd-is-a-subdirectory-of-a-given-path
org(){

if [[ "$1" ]]
then
    cd "$HOME"/"$MY_DRIVE"/org/"$1" || return
    pwd
fi

if [[ -z "$1" ]]
then
    cd "$HOME"/"$MY_DRIVE"/org/ || return
    pwd
fi

# HELP SYSTEM

if [[ $1 == '-h' || $1 == '--help' || $1 == '-?' || $1 == 'help' ]]
then
	echo "'~'/.bash/functions org"
	echo "Bash function for quick navigation to directories located in"
    echo "$HOME/"$MY_DRIVE"/org"
	echo "USAGE"
	echo "    drive OPTIONS"
	echo "OPTIONS"
	echo "  --help, -h, -?, help"
	echo "      Display this page."
	echo "  foo"
	echo "      'cd ~/"$MY_DRIVE"/org/foo"
	echo "  bar"
	echo "      'cd ~/"$MY_DRIVE"/org/bar"
fi
}
# sort by size
dusort() {

if [[ -z "$1" ]]
then
	du -sh ./* | sort -h
fi

if [[ "$1" == "-1" ]]
then
	du -h ./* -d 1 | sort -h
fi

# HELP SYSTEM

if [[ $1 == '-h' || $1 == '--help' || $1 == '-?' || $1 == 'help' ]]
then
	echo "'~'/.bash/functions dusort"
	echo "Bash function for sorting files/directories by size"
	echo "USAGE"
	echo "    dusort OPTIONS"
	echo "OPTIONS"
	echo "  --help, -h, -?, help"
	echo "      Display this page."
	echo "  -1"
	echo "      With 1 more depth level."
fi

}
cheat (){
	if [[ -z "$1"  ]]
	then
                curl cheat.sh | less --RAW-CONTROL-CHARS
	else
                curl cheat.sh/"$1" | less --RAW-CONTROL-CHARS
	fi
}
red (){
	if [[ -z "$1"  ]]
	then
                redshift -x
	else
                redshift -O "$1"
	fi
}
psaux(){
  # select 2nd and lats field with awk
  ps aux | awk '{print $2, $NF}' | less -S
}
lights(){
case "$1" in
    on)
	  ~/bin/set_theme_to_light ;;
    off)
	  ~/bin/set_theme_to_dark ;;
esac
}
now(){
    date "+%Y-%m-%d %H:%M:%S" && \
    /usr/local/opt/util-linux/bin/cal -m
}
agenda(){
	if [[ -z "$1"  ]]
	then
      "$HOME"/venv/python3.12.2/bin/python \
      "$HOME"/bin/python/agenda_manu.py --today | less --RAW-CONTROL-CHARS
	else
      "$HOME"/bin/python/agenda_manu.py "$1" | less --RAW-CONTROL-CHARS
	fi
}
# Function to sort the file and find duplicate lines
find_duplicates() {
  if [ -z "$1" ]; then
    echo "Usage: find_duplicates FILE"
    echo "This script find duplicate lines in FILE"
    return 1
  fi

  if [ ! -f "$1" ]; then
    echo "Error: File '$1' not found."
    return 1
  fi

  sort "$1" | uniq -d
}
. ~/bin/backup
. ~/bin/recover
