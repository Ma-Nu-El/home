:TITLE_SUBTITLE_AND_EXPORT_FILE_NAME:
#+TITLE: My Bash Configuration
#+SUBTITLE: in orgmode format
#+EXPORT_FILE_NAME: ./export/bash_configuration
:END:

* Aliases

#+begin_src bash :tangle ./aliases :shebang "#!/usr/bin/env bash" :tangle-mode (identity #o755)
### git ###

alias config='/usr/bin/git --git-dir="$HOME"/.cfg/ --work-tree="$HOME"'

### home bare repo ###

alias home='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME"'
alias he='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" status' # same idea as "te"
alias hf='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" diff'
alias hgraph='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" log --all --decorate --oneline --graph'
alias htree='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" ls-tree --name-only master'
alias hunstage='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" restore --staged'
alias huntrack='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" rm -r --cached'
alias hamend='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" commit --amend'
alias hadd='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" add'
alias hommit='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" commit'
alias hpush='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" push'
alias hpull='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" pull'
alias hfetch='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" fetch'
alias hmerge='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" merge'
alias hbranch='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" branch'
alias hch='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" checkout'
alias hchm='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" checkout master'
alias hrestore='/usr/bin/git --git-dir="$HOME"/.home/ --work-tree="$HOME" restore'

# pure git #

alias ginit='git init'
alias gadd='git add'
alias te='git status'
alias gommit='git commit'
alias gcam='git commit -am"'
alias gpush="git push"
alias gpull='git pull'
alias graph='git log --all --decorate --oneline --graph'
alias gch='git checkout'
alias gchm='git checkout master'
alias gbranch='git branch'
alias gtree='git ls-tree -r --name-only HEAD'
alias gtreeh='git ls-tree -r --name-only HEAD'
alias gtreem='git ls-tree -r --name-only master'
alias gf='git diff'
alias gunstage="git restore --staged" # remove file from staging area, '-r' flag for directorie'
alias guntrack='git rm -r --cached" # untrack files currently tracked by git, '-r' flag for directorie'
alias gamend='git commit --amend'
alias grestore='git restore'
alias gsm='git submodule | cut -d " " -f3'

# shell interaction

alias c='clear'
alias cnd='clear &&'
alias p='pwd'
alias pp='clear && pwd'
alias lah='ls -lah'
# alias dusort='du -sh * | sort -h' # sort by siz # made function: ./functions
alias eo='clear && pwd && echo '-----' && ls' # was 'pa', but was the most used one so now is more ergo
# https://superuser.com/questions/250227/how-do-i-see-what-my-most-used-linux-command-are
alias eoa='clear && pwd && echo '-----' && ls -a' # with hidden files
alias eou='clear && pwd && echo '-----' && ls -1' # as list
alias eoua='clear && pwd && echo '-----' && ls -1a' # as list with hidden files
alias lagrep='ls -a | grep -i' # append your simple grep search, case insensitive

# quick navigation

alias cdc='clear && cd ~ && pwd && echo -----'
alias ...='cd ../../' # cd up 2 times
alias ....='cd ../../../' # cd up 3 times
alias .....='cd ../../../../' # cd up 4 times
alias ......='cd ../../../../../' # cd up 5 times
alias .......='cd ../../../../../' # cd up 6 times
alias ........='cd ../../../../../' # cd up 7 times
alias E='exit'
alias 1='~/Desktop'
alias 2='~/Downloads'
alias 3='~/Documents'
alias 4='~/Pictures'
alias 5='~/Videos'
alias 6='~/Music'
alias 11='~/FilenSync' # cloud directory

# quick editor

alias v='vim'
alias e='emacs -nw' # opens new instance of emacs in the terminal: no GUI
alias ee='clear && cd ~ && emacs -nw' # same but from home directory
alias ed='emacs --daemon' # creates default emacs server named 'server'
alias ec='emacsclient -t' # attach to the default emacs server
alias edn='emacs-daemon-new' # creates a custom-named emacs server
alias els='ls -1 /tmp/emacs${UID}' # get list of running emacs servers
alias ecs='emacsclient -t -s' # attach to a custom-named emacs server

# tmux

alias t='tmux'
alias tn='tmux new-session' # create session with default name
alias tns='tmux new -s' # append your session name to be created
alias tks='tmux kill-session -t' # append your session name to be killed
alias tls='tmux ls' # list sessions # <prefix> s
alias ta='tmux attach-session' # attach to last session
alias tas='tmux attach-session -t' # append your session name to be attached to

#alias tpls="ls ~/.tmuxp/"

## misc aliases

alias hh='echo 'https://github.com/Ma-Nu-El/home''
alias match='matchfilename'
alias x='command -v'
alias X='command -V'
alias les='less --RAW-CONTROL-CHARS'
alias cht='cheat' # defined in ~/.bash/functions
alias jj='jobs -l'
alias agenda="~/bin/agenda.py | less -R"
alias ag="agenda"

## alias R="ranger" # commented out: messes with R called from within orgmode.

alias V='sxiv -to'
alias ptt='tree -C | less -R'
alias O='~/bin/open_and_open_with'
alias openwith='mimeopen -a'
alias chmodx='chmod +x'
alias now='date && cal'
alias de='deploy encrypt'
alias dd='deploy decrypt'
alias fire='firefox --private-window >/dev/null 2>/dev/null &'
alias rr='rm -rf ~/org/auxRoam && roam dummy'
alias theo="cd ~ && clear && pwd && echo '-----' && he"
alias the='cd-and-git-status'
alias detectdir='detectdirectories'
alias speed='speedtest --simple --bytes'
alias dvorak='sudo loadkeys dvorak'
alias eva='cat ~/org/uni/org/2020-2/evaluaciones.txt'
#alias bat='~/bin/manu-battery'
alias bat='~/bin/battery'
alias batp='~/bin/battery -p'
#alias batn='~/bin/manu-battery -n'
alias gpgrestart='gpgconf --kill gpg-agent'
alias ddirs='~/bin/detectdirectories'
alias sessions='~/Ardour/'
#alias agenda='xdg-open &>/dev/null ~/org/agenda.html'
alias wea='weather'
alias syncthing_gui='echo 'http://localhost:8384/''
alias cw='clockywock'
alias ow='mimeopen -d'
alias sw='~/bin/stopwatch'
alias timer='~/bin/timer'
alias auxLock='~/bin/auxRoam lock'
alias auxUnlock='~/bin/auxRoam unlock'
alias RR='R --quiet --no-save'
alias RRR='R --quiet --no-save -e'
alias cat_public_ssh_key='clear && cat ~/.ssh/id_rsa.pub'
alias qr='qrencode'

### fresh install

alias install_doom_emacs='git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d && ~/.emacs.d/bin/doom install'
alias install_tmux_plugins='git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm' # install packages on fresh OS

### Docker
alias dk='docker'

### lights off and on
alias loff='lights off'
alias lon='lights on'
#+end_src

* Functions

#+begin_src bash :tangle ./functions :shebang "#!/usr/bin/env bash" :tangle-mode (identity #o755)
#!/usr/bin/env bash

set -o pipefail

manuclone(){
	if [[ -z "$1"  ]]
	then
		echo "example: 'manuclone foo bar' is the same as"
		echo "'git clone git@github.com:Ma-Nu-El/foo bar'"
	else
	git clone git@github.com:Ma-Nu-El/"$1"
	fi
}

#quick useful defaults


# cd and git status into directory
cd-and-git-status(){
if [ -d "$1" ] # if argument is a directory
then
	cd "$1" || exit
	clear && pwd && echo "-----" && git status
else
	if [ -z "$1" ]
	then
		clear && pwd && git status
	fi
fi
}

# cd and ls
ue(){
cd "$1" && clear && pwd && echo '-----' && ls
}

# quick jumps to ~/myDrive
drive(){

if [[ "$1" ]]
then
    cd "$HOME"/myDrive/"$1" || return
    pwd
fi

if [[ -z "$1" ]]
then
    cd "$HOME"/myDrive/ || return
    pwd
fi

# HELP SYSTEM

if [[ $1 == '-h' || $1 == '--help' || $1 == '-?' || $1 == 'help' ]]
then
	echo "'~'/.bash/functions drive"
	echo "Bash function for quick navigation to directories located in ~/myDrive"
	echo "USAGE"
	echo "    drive OPTIONS"
	echo "OPTIONS"
	echo "  --help, -h, -?, help"
	echo "      Display this page."
	echo "  foo"
	echo "      'cd ~/myDrive/foo"
	echo "  bar"
	echo "      'cd ~/myDrive/bar"
fi
}

# https://unix.stackexchange.com/questions/6435/how-to-check-if-pwd-is-a-subdirectory-of-a-given-path
org(){

if [[ "$1" ]]
then
    cd "$HOME"/FilenSync/org/"$1" || return
    pwd
fi

if [[ -z "$1" ]]
then
    cd "$HOME"/FilenSync/org/ || return
    pwd
fi

# HELP SYSTEM

if [[ $1 == '-h' || $1 == '--help' || $1 == '-?' || $1 == 'help' ]]
then
	echo "'~'/.bash/functions org"
	echo "Bash function for quick navigation to directories located in"
    echo "$HOME/FilenSync/org"
	echo "USAGE"
	echo "    drive OPTIONS"
	echo "OPTIONS"
	echo "  --help, -h, -?, help"
	echo "      Display this page."
	echo "  foo"
	echo "      'cd ~/FilenSync/org/foo"
	echo "  bar"
	echo "      'cd ~/FilenSync/org/bar"
fi
}

# sort by size
dusort() {

if [[ -z "$1" ]]
then
	du -sh ./* | sort -h
fi

if [[ "$1" == "-1" ]]
then
	du -h ./* -d 1 | sort -h
fi

# HELP SYSTEM

if [[ $1 == '-h' || $1 == '--help' || $1 == '-?' || $1 == 'help' ]]
then
	echo "'~'/.bash/functions dusort"
	echo "Bash function for sorting files/directories by size"
	echo "USAGE"
	echo "    dusort OPTIONS"
	echo "OPTIONS"
	echo "  --help, -h, -?, help"
	echo "      Display this page."
	echo "  -1"
	echo "      With 1 more depth level."
fi

}

weather(){
	if [[ -z "$1"  ]]
	then
		wget -qO- wttr.in/Villarrica+Chile?Fm | less -R
	else
		wget -qO- wttr.in/"$1"?Fm | less -R
	fi
}

cheat (){
	if [[ -z "$1"  ]]
	then
                curl cheat.sh | less --RAW-CONTROL-CHARS
	else
                curl cheat.sh/"$1" | less --RAW-CONTROL-CHARS
	fi
}

red (){
	if [[ -z "$1"  ]]
	then
                redshift -x
	else
                redshift -O "$1"
	fi
}

psaux(){
  # select 2nd and lats field with awk
  ps aux | awk '{print $2, $NF}' | less -S
}

lights(){
case "$1" in
    on)
	  ~/bin/set_theme_to_light ;;
    off)
	  ~/bin/set_theme_to_dark ;;
esac
}
#+end_src

* Environments
